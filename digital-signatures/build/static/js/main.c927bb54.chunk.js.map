{"version":3,"sources":["Components/Authentication/AuthenticationAction.js","Components/Authentication/AuthenticationActionTypes.js","Components/Authentication/Authentication.jsx","Components/Declaration/DeclarationActions.js","Components/Declaration/DeclarationActionTypes.js","Components/Declaration/Declaration.jsx","Components/Confirmation/Confirmation.jsx","Shared/Routes.jsx","App.js","serviceWorker.js","Shared/States/InitialState.js","Components/Authentication/AuthenticationReducers.js","Components/Declaration/DeclarationReducers.js","Shared/States/RootReducer.js","history.js","index.js","Shared/States/AppState.js"],"names":["GetDetails","link","dispatch","Axios","get","headers","content-type","then","response","type","payload","data","Authenticate","IdNumber","RealIdNumber","console","log","Authentication","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ID","handleChange","bind","assertThisInitialized","event","setState","target","value","identityNumber","history","push","decodedLink","base64","decode","decodeURIComponent","params","queryString","parse","location","search","DecodeLink","blobUri","_this2","react_default","a","createElement","className","id","placeholder","onChange","onClick","React","Component","protoTypes","investorTypeDescr","PropTypes","string","surname","titleId","number","titleDesc","firstNames","entityTypeDescr","natureOfPersonDescr","entityPurposeTypeId","entityPurposeTypeDescr","mancoNumber","preferredName","initials","gender","language","industryNo","industryDescr","purposeInvNo","purposeInvDescr","contactPerson","occupationId","occupationDescr","maritalStatusDescr","identityDocumentTypeId","connect","investorDetails","bindActionCreators","AuthenticationAction","GetInvestorRespone","ActionType","InvestorID","InformationPassed","Answer","Identification","post","catch","error","GetTerms_Condition","Declaration","input","e","document","innerHTML","childNodes","length","nodeValue","dangerouslySetInnerHTML","__html","termsConditions","Accept","Reject","ReportFraud","DeclarationActions","Confirmation","Routes","react_router_dom","react_router","path","exact","component","render","to","App","Shared_Routes","Boolean","window","hostname","match","InitialState","AuthenticationReducer","arguments","undefined","action","objectSpread","DeclarationReducer","RootReducer","combineReducers","createBrowserHistory","ReactDOM","es","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c927bb54.chunk.js","sourcesContent":["import * as Types from './AuthenticationActionTypes';\r\nimport Axios from 'axios';\r\n\r\nexport const GetDetails = (link) => {\r\n    return function (dispatch) {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        };\r\n        Axios.get(link, config)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: Types.GET_DETAILS,\r\n                    payload: response.data\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n//TODO: Validation for empty string\r\nexport const Authenticate = (IdNumber, RealIdNumber) => {\r\n    if (IdNumber !== RealIdNumber) {\r\n        console.log(\"Invalid Id Number\");\r\n        return false;\r\n    }\r\n    else if (IdNumber === ' ') {\r\n        console.log(\"Empty String!\");\r\n        return false;\r\n    }\r\n    else {\r\n        console.log(\"Valid Id Number\");\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n","export const AUTHENTICATE = 'AUTHENTICATE ',\r\n    GET_DETAILS = 'GET_DETAILS';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as AuthenticationAction from './AuthenticationAction';\r\nimport { bindActionCreators } from 'redux';\r\nimport queryString from 'query-string';\r\nimport base64 from 'base-64';\r\n\r\nclass Authentication extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ID: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ ID: event.target.value })\r\n  }\r\n\r\n  Authenticate() {\r\n    console.log(\"Authentication Method\");\r\n    const isValid = this.props.Authenticate(this.state.ID, this.props.identityNumber);\r\n    if (isValid) {\r\n      this.props.history.push('/Declaration');\r\n    }\r\n  }\r\n\r\n  DecodeLink(link) {\r\n    let decodedLink = base64.decode(link);\r\n    let decodedURI = decodeURIComponent(decodedLink);\r\n    return decodedURI;\r\n  }\r\n\r\n  componentWillMount() {\r\n    let params = queryString.parse(this.props.location.search);\r\n    this.props.GetDetails(this.DecodeLink(params.blobUri));\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<div>\r\n      <div className=\"container\">\r\n        <form>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label\">ID Number</label>\r\n            <div className=\"col-sm-10\">\r\n              <input type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"IdNumber\"\r\n                placeholder=\"ID Number\"\r\n                value={this.state.ID}\r\n                onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"offset-sm-2 col-sm-10\">\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.Authenticate()}>Authenticate</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>);\r\n  }\r\n}\r\n\r\nAuthentication.protoTypes = {\r\n  investorTypeDescr: PropTypes.string,\r\n  surname: PropTypes.string,\r\n  titleId: PropTypes.number,\r\n  titleDesc: PropTypes.string,\r\n  firstNames: PropTypes.string,\r\n  entityTypeDescr: PropTypes.string,\r\n  natureOfPersonDescr: PropTypes.string,\r\n  entityPurposeTypeId: PropTypes.string,\r\n  entityPurposeTypeDescr: PropTypes.string,\r\n  mancoNumber: PropTypes.number,\r\n  preferredName: PropTypes.string,\r\n  initials: PropTypes.string,\r\n  gender: PropTypes.string,\r\n  language: PropTypes.string,\r\n  industryNo: PropTypes.number,\r\n  industryDescr: PropTypes.string,\r\n  purposeInvNo: PropTypes.string,\r\n  purposeInvDescr: PropTypes.string,\r\n  contactPerson: PropTypes.string,\r\n  occupationId: PropTypes.number,\r\n  occupationDescr: PropTypes.string,\r\n  maritalStatusDescr: PropTypes.string,\r\n  identityDocumentTypeId: PropTypes.number,\r\n  identityNumber: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  investorTypeDescr: state.investorDetails.investorTypeDescr,\r\n  surname: state.investorDetails.surname,\r\n  titleId: state.investorDetails.titleId,\r\n  titleDesc: state.investorDetails.titleDesc,\r\n  firstNames: state.investorDetails.firstNames,\r\n  entityTypeDescr: state.investorDetails.entityPurposeTypeDescr,\r\n  natureOfPersonDescr: state.investorDetails.natureOfPersonDescr,\r\n  entityPurposeTypeId: state.investorDetails.entityPurposeTypeId,\r\n  entityPurposeTypeDescr: state.investorDetails.entityPurposeTypeDescr,\r\n  mancoNumber: state.investorDetails.mancoNumber,\r\n  preferredName: state.investorDetails.preferredName,\r\n  initials: state.investorDetails.initials,\r\n  gender: state.investorDetails.gender,\r\n  language: state.investorDetails.language,\r\n  industryNo: state.investorDetails.industryNo,\r\n  industryDescr: state.investorDetails.industryDescr,\r\n  purposeInvNo: state.investorDetails.purposeInvNo,\r\n  purposeInvDescr: state.investorDetails.purposeInvDescr,\r\n  contactPerson: state.investorDetails.contactPerson,\r\n  occupationId: state.investorDetails.occupationId,\r\n  occupationDescr: state.investorDetails.occupationDescr,\r\n  maritalStatusDescr: state.investorDetails.maritalStatusDescr,\r\n  identityDocumentTypeId: state.investorDetails.identityDocumentTypeId,\r\n  identityNumber: state.investorDetails.identityNumber\r\n});\r\n\r\nconst mapActionsToProps = (dispatch) => ({\r\n  GetDetails: bindActionCreators(AuthenticationAction.GetDetails, dispatch),\r\n  Authenticate: AuthenticationAction.Authenticate\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Authentication);\r\n","import * as Types from './DeclarationActionTypes';\r\nimport Axios from 'axios';\r\n\r\nexport const GetInvestorRespone = (ActionType, InvestorID) => {\r\n    console.log(\"Investor Resposne\");\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    };\r\n    let InformationPassed = {\r\n        Answer: ActionType,\r\n        Identification: InvestorID\r\n    };\r\n    Axios.post('https://fndigisigtest0001.azurewebsites.net/api/fndeodstest0001?code=REW0FWuUmVieHhoFb83q/knTIh5M8KJBuHjId5tHSguUD9voR9KQGg==', InformationPassed, config)\r\n        .then(response => {\r\n            console.log(\"API RESPONSE: \", response);\r\n            return true;\r\n        }).catch(error => {\r\n            console.log(\"Error\", error);\r\n        })\r\n\r\n}\r\n\r\nexport const GetTerms_Condition = () => {\r\n    return function (dispatch) {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'text/html'\r\n            }\r\n        };\r\n        Axios.get('https://fndigisigtest0001.azurewebsites.net/api/GetTemplate?code=Y5CDDlejIfU8ejqQshKdQceGVrDnOtWdoGJqxHt2TlUeoT6fGWPyKg==&version=V1', config)\r\n            .then(response => {\r\n                console.log(\"Template\", response);\r\n                dispatch({\r\n                    type: Types.GET_TERM_CONDITONS,\r\n                    payload: response\r\n                });\r\n            });\r\n    }\r\n}\r\n","export const GET_TERM_CONDITONS = \"GET_TERM_CONDITONS\";\r\n","import React from 'react';\r\nimport './Declaration.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as DeclarationActions from './DeclarationActions';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nclass Declaration extends React.Component {\r\n  state = {}\r\n\r\n  ReportFraud() {\r\n    this.props.GetInvestorRespone(\"Fraud\", this.props.identityNumber);\r\n    this.props.history.push('/Confirmation');\r\n  }\r\n\r\n  Reject() {\r\n    this.props.GetInvestorRespone(\"Reject\", this.props.identityNumber);\r\n    this.props.history.push('/Confirmation');\r\n  }\r\n\r\n  Accept() {\r\n    this.props.GetInvestorRespone(\"Accept\", this.props.identityNumber);\r\n    this.props.history.push('/Confirmation');\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.GetTerms_Condition();\r\n  }\r\n  htmlDecode(input) {\r\n    var e = document.createElement('div');\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n  }\r\n  render() {\r\n    return (<div className=\"Declaration\">\r\n      <div className=\"container  pb-5\">\r\n        <p className=\"h3 text-center\"><u>INVESTOR DECLARATION</u></p>\r\n        <p> I, the investor, acknowledge that by signing this document, I declare that:</p>\r\n        <div dangerouslySetInnerHTML={{ __html: this.props.termsConditions.termsConditions }}>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer bg-light\">\r\n        <div className=\"d-flex flex-row justify-content-around\">\r\n          <div className=\"p-2\">\r\n            <button type=\"button\" onClick={() => this.Accept()} className=\"btn btn-success\">Accept</button>\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <button type=\"button\" onClick={() => this.Reject()} className=\"btn btn-danger\">Reject</button>\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <button type=\"button\" onClick={() => this.ReportFraud()} className=\"btn btn-warning\">Report Fraud</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n  }\r\n}\r\n\r\nDeclaration.protoTypes = {\r\n  termsConditions: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  identityNumber: state.investorDetails.identityNumber,\r\n  termsConditions: state.termsConditions\r\n});\r\n\r\nconst mapActionsToProps = (dispatch) => ({\r\n  GetInvestorRespone: DeclarationActions.GetInvestorRespone,\r\n  GetTerms_Condition: bindActionCreators(DeclarationActions.GetTerms_Condition, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Declaration);","import React from 'react';\r\n\r\nclass Confirmation extends React.Component {\r\n  state = {}\r\n  render() {\r\n    return (<div className=\"container\">\r\n      Thank you very much for your feedback!\r\n        </div>);\r\n  }\r\n}\r\n\r\nexport default Confirmation;","import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Authentication from '../Components/Authentication/Authentication';\r\nimport Declaration from '../Components/Declaration/Declaration';\r\nimport Confirmation from '../Components/Confirmation/Confirmation'\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Authentication} />\r\n                <Route path=\"/Authentication\" exact component={Authentication} />\r\n                <Route path=\"/Declaration\" exact component={Declaration} />\r\n                <Route path=\"/Confirmation\" exact component={Confirmation} />\r\n                <Route render={() => <Redirect to=\"/\" />} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from '../src/Shared/Routes';\n\nclass App extends Component {\n  render() {\n      return (\n          <Routes/>\n      );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const InitialState = {\r\n    investorDetails: {\r\n        investorTypeDescr: \"\",\r\n        surname: \"\",\r\n        titleId: 0,\r\n        titleDesc: \"\",\r\n        firstNames: \"\",\r\n        entityTypeDescr: \"\",\r\n        natureOfPersonDescr: \"\",\r\n        entityPurposeTypeId: \"\",\r\n        entityPurposeTypeDescr: \"\",\r\n        mancoNumber: 0,\r\n        preferredName: \"\",\r\n        initials: \"\",\r\n        gender: \"\",\r\n        language: \"\",\r\n        industryNo: 0,\r\n        industryDescr: \"\",\r\n        purposeInvNo: 0,\r\n        purposeInvDescr: \"\",\r\n        contactPerson: \"\",\r\n        occupationId: 0,\r\n        occupationDescr: \"\",\r\n        maritalStatusDescr: \"\",\r\n        identityDocumentTypeId: 0,\r\n        identityNumber: \"\"\r\n    },\r\n\r\n    termsConditions: {\r\n        termsConditions: \"\"\r\n    }\r\n};\r\n\r\nexport default InitialState;\r\n","import InitialState from '../../Shared/States/InitialState';\r\nimport * as Types from './AuthenticationActionTypes';\r\n\r\nconst AuthenticationReducer = (state = InitialState.investorDetails, action) => {\r\n    switch (action.type) {\r\n        case Types.GET_DETAILS:\r\n            console.log(\"Investor Details: \", action.payload.investorDetails);\r\n            return {\r\n                ...state,\r\n                ...action.payload.investorDetails\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AuthenticationReducer;","import InitialState from \"../../Shared/States/InitialState\";\r\nimport * as Types from \"./DeclarationActionTypes\";\r\n\r\nconst DeclarationReducer = (\r\n    state = InitialState.termsConditions,\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case Types.GET_TERM_CONDITONS:\r\n            return {\r\n                ...state,\r\n                termsConditions: action.payload.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default DeclarationReducer;\r\n","import AuthenticationReducer from '../../Components/Authentication/AuthenticationReducers';\r\nimport DeclarationReducer from '../../Components/Declaration/DeclarationReducers';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst RootReducer = combineReducers({\r\n    investorDetails: AuthenticationReducer,\r\n    termsConditions: DeclarationReducer\r\n});\r\n\r\nexport default RootReducer;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createAppState } from './Shared/States/AppState';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Router } from 'react-router-dom';\nimport history from './history';\n\nReactDOM.render(\n    <Provider store={createAppState()}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport RootReducer from './RootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport InitialState from './InitialState';\r\nimport logger from 'redux-logger'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const createAppState = () => createStore(RootReducer, InitialState, composeWithDevTools(applyMiddleware(thunk, logger)));"],"sourceRoot":""}